"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var isArray_1 = __importDefault(require("lodash/isArray"));
var isEmpty_1 = __importDefault(require("lodash/isEmpty"));
var isNil_1 = __importDefault(require("lodash/isNil"));
var some_1 = __importDefault(require("lodash/some"));
var toString_1 = __importDefault(require("lodash/toString"));
var react_1 = require("react");
var react_select_1 = __importDefault(require("react-select"));
var creatable_1 = __importDefault(require("react-select/creatable"));
var MySingleValue_1 = require("./MySingleValue");
var SelectDropdownStyles_1 = require("./SelectDropdownStyles");
var components = {
    SingleValue: MySingleValue_1.MySingleValue,
};
var SelectDropdown = (function (_super) {
    __extends(SelectDropdown, _super);
    function SelectDropdown() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.noOptionsMessage = function (obj) {
            var selectProps = _this.props.selectProps;
            if ((0, isNil_1.default)(selectProps)) {
                return null;
            }
            if ((0, isEmpty_1.default)(obj) || (0, isEmpty_1.default)(obj.inputValue)) {
                return (selectProps.msgNoOptionsAvailable || 'No more options are available');
            }
            var inputValue = obj.inputValue;
            if (selectProps.isCreatable !== true ||
                _this.containsValue(inputValue) ||
                _this.containsOptions(inputValue)) {
                return (selectProps.msgNoOptionsMatchFilter || 'No options match the filter');
            }
            return (selectProps.msgNoValidValue ||
                'The new value is not valid (contains space)');
        };
        _this.isValidNewOption = function (inputValue) {
            if ((0, isEmpty_1.default)(inputValue)) {
                return false;
            }
            if (_this.containsOptions(inputValue)) {
                return false;
            }
            var hasSpaces = SelectDropdown.spaces.test(inputValue);
            return hasSpaces === false;
        };
        return _this;
    }
    SelectDropdown.prototype.render = function () {
        var _a = this.props, inputId = _a.inputId, placeholder = _a.placeholder, onChange = _a.onChange, onFocus = _a.onFocus, onBlur = _a.onBlur, options = _a.options, selectProps = _a.selectProps, value = _a.value;
        var styles = (0, SelectDropdownStyles_1.getStyles)(selectProps);
        var comps = (selectProps === null || selectProps === void 0 ? void 0 : selectProps.components)
            ? __assign(__assign({}, components), selectProps === null || selectProps === void 0 ? void 0 : selectProps.components) : components;
        if (selectProps === null || selectProps === void 0 ? void 0 : selectProps.isCreatable) {
            return ((0, jsx_runtime_1.jsx)(creatable_1.default, __assign({ inputId: inputId, isValidNewOption: this.isValidNewOption, captureMenuScroll: false, createOptionPosition: "first" }, selectProps, { value: value, placeholder: placeholder, options: options, styles: styles, noOptionsMessage: this.noOptionsMessage, onChange: onChange, onFocus: onFocus, onBlur: onBlur, components: comps })));
        }
        return ((0, jsx_runtime_1.jsx)(react_select_1.default, __assign({ inputId: inputId, captureMenuScroll: false }, selectProps, { value: value, placeholder: placeholder, options: options, styles: styles, noOptionsMessage: this.noOptionsMessage, onChange: onChange, onFocus: onFocus, onBlur: onBlur, components: comps })));
    };
    SelectDropdown.prototype.containsOptions = function (inputValue) {
        var _this = this;
        return (0, some_1.default)(this.props.options, function (option) {
            return _this.equalsIgnoringCase(inputValue, option.value);
        });
    };
    SelectDropdown.prototype.containsValue = function (inputValue) {
        var _this = this;
        var value = this.props.value;
        if ((0, isArray_1.default)(value) === false) {
            return false;
        }
        return (0, some_1.default)(value, function (option) {
            return _this.equalsIgnoringCase(inputValue, option.value);
        });
    };
    SelectDropdown.prototype.equalsIgnoringCase = function (a, b) {
        return (a.localeCompare((0, toString_1.default)(b), undefined, SelectDropdown.SENSITIVITY) === 0);
    };
    SelectDropdown.spaces = /\s/;
    SelectDropdown.SENSITIVITY = { sensitivity: 'base' };
    return SelectDropdown;
}(react_1.Component));
exports.default = SelectDropdown;
